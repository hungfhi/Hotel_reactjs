{"ast":null,"code":"import { AES, enc } from 'crypto-js';\nconst pls = {\n  set: (key, value) => {\n    localStorage[key] = value;\n    return localStorage[key];\n  },\n  get: (key, defaultValue) => localStorage[key] || defaultValue,\n  setObject: (key, value) => {\n    localStorage[key] = JSON.stringify(value);\n    return localStorage[key];\n  },\n  getObject: key => {\n    try {\n      return localStorage[key] && JSON.parse(localStorage[key]) || {};\n    } catch (err) {\n      pls.remove(key);\n    }\n  },\n  clear: () => localStorage.clear(),\n  remove: key => localStorage.removeItem(key)\n};\nconst sls = {\n  set: (key, value) => {\n    localStorage[key] = AES.encrypt(value, key).toString();\n    return localStorage[key];\n  },\n  get: (key, defaultValue) => {\n    try {\n      const encrypted = localStorage[key];\n\n      if (encrypted) {\n        return AES.decrypt(encrypted, key).toString(enc.Utf8);\n      }\n\n      return defaultValue;\n    } catch (err) {\n      sls.remove(key);\n    }\n  },\n  setObject: (key, value) => {\n    localStorage[key] = AES.encrypt(JSON.stringify(value).replace(/(<([^>]+)>)/gi, ''), key).toString();\n    return localStorage[key];\n  },\n  getObject: key => {\n    try {\n      const encrypted = localStorage[key];\n\n      if (encrypted) {\n        const decrypt = AES.decrypt(encrypted, key).toString(enc.Utf8);\n        return decrypt ? JSON.parse(decrypt) : null;\n      }\n    } catch (err) {\n      sls.remove(key);\n    }\n\n    return null;\n  },\n  clear: () => localStorage.clear(),\n  remove: key => localStorage.removeItem(key)\n};\nexport const $LocalStorage = {\n  sls,\n  pls\n};","map":{"version":3,"sources":["/Users/dugnt/Documents/upgit/Hotel_reactjs/src/utils/localStorage.js"],"names":["AES","enc","pls","set","key","value","localStorage","get","defaultValue","setObject","JSON","stringify","getObject","parse","err","remove","clear","removeItem","sls","encrypt","toString","encrypted","decrypt","Utf8","replace","$LocalStorage"],"mappings":"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","sourcesContent":["import { AES, enc } from 'crypto-js';\n\nconst pls = {\n  set: (key, value) => {\n    localStorage[key] = value;\n    return localStorage[key];\n  },\n  get: (key, defaultValue) => localStorage[key] || defaultValue,\n  setObject: (key, value) => {\n    localStorage[key] = JSON.stringify(value);\n    return localStorage[key];\n  },\n  getObject: key => {\n    try {\n      return (localStorage[key] && JSON.parse(localStorage[key])) || {};\n    } catch (err) {\n      pls.remove(key);\n    }\n  },\n  clear: () => localStorage.clear(),\n  remove: key => localStorage.removeItem(key),\n};\n\nconst sls = {\n  set: (key, value) => {\n    localStorage[key] = AES.encrypt(value, key).toString();\n    return localStorage[key];\n  },\n  get: (key, defaultValue) => {\n    try {\n      const encrypted = localStorage[key];\n      if (encrypted) {\n        return AES.decrypt(encrypted, key).toString(enc.Utf8);\n      }\n      return defaultValue;\n    } catch (err) {\n      sls.remove(key);\n    }\n  },\n  setObject: (key, value) => {\n    localStorage[key] = AES.encrypt(\n      JSON.stringify(value).replace(/(<([^>]+)>)/gi, ''),\n      key,\n    ).toString();\n    return localStorage[key];\n  },\n  getObject: key => {\n    try {\n      const encrypted = localStorage[key];\n      if (encrypted) {\n        const decrypt = AES.decrypt(encrypted, key).toString(enc.Utf8);\n        return decrypt ? JSON.parse(decrypt) : null;\n      }\n    } catch (err) {\n      sls.remove(key);\n    }\n    return null;\n  },\n  clear: () => localStorage.clear(),\n  remove: key => localStorage.removeItem(key),\n};\n\nexport const $LocalStorage = {\n  sls,\n  pls,\n};\n"]},"metadata":{},"sourceType":"module"}