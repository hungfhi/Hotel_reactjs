{"ast":null,"code":"import { Map } from \"immutable\";\nimport Globals from \"../../utils/globals\";\nimport setupSession from \"../../utils/setupSession\";\nimport _ from \"lodash\";\nimport { SET_AUTHENTICATED, LOGOUT } from \"../constants\";\nsetupSession();\nexport const initialState = Map({\n  isAuthenticated: Globals.isAuthenticated || false,\n  profile: Globals.currentUser || {},\n  appConfig: Globals.currentUser || {}\n});\n\nconst appReducer = (state = initialState, action) => {\n  let nextState = state;\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      nextState = nextState.set(\"isAuthenticated\", _.get(payload, \"isAuthenticated\"));\n      nextState = nextState.set(\"profile\", _.get(payload, \"profile\"));\n      return nextState;\n\n    case LOGOUT:\n      Globals.clear();\n      nextState = nextState.set(\"isAuthenticated\", false);\n      nextState = nextState.set(\"profile\", {});\n      return nextState;\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;","map":{"version":3,"sources":["/Users/dugnt/Documents/upgit/Hotel_reactjs/src/store/reducers/AppReducer.js"],"names":["Map","Globals","setupSession","_","SET_AUTHENTICATED","LOGOUT","initialState","isAuthenticated","profile","currentUser","appConfig","appReducer","state","action","nextState","payload","type","set","get","clear"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,iBAAT,EAA4BC,MAA5B,QAA0C,cAA1C;AAEAH,YAAY;AACZ,OAAO,MAAMI,YAAY,GAAGN,GAAG,CAAC;AAC5BO,EAAAA,eAAe,EAAEN,OAAO,CAACM,eAAR,IAA2B,KADhB;AAE5BC,EAAAA,OAAO,EAAEP,OAAO,CAACQ,WAAR,IAAuB,EAFJ;AAG5BC,EAAAA,SAAS,EAAET,OAAO,CAACQ,WAAR,IAAuB;AAHN,CAAD,CAAxB;;AAMP,MAAME,UAAU,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACjD,MAAIC,SAAS,GAAGF,KAAhB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAcF,MAApB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKZ,iBAAL;AACIU,MAAAA,SAAS,GAAGA,SAAS,CAACG,GAAV,CACV,iBADU,EAEVd,CAAC,CAACe,GAAF,CAAMH,OAAN,EAAe,iBAAf,CAFU,CAAZ;AAIAD,MAAAA,SAAS,GAAGA,SAAS,CAACG,GAAV,CAAc,SAAd,EAAyBd,CAAC,CAACe,GAAF,CAAMH,OAAN,EAAe,SAAf,CAAzB,CAAZ;AACA,aAAOD,SAAP;;AACJ,SAAKT,MAAL;AACIJ,MAAAA,OAAO,CAACkB,KAAR;AACAL,MAAAA,SAAS,GAAGA,SAAS,CAACG,GAAV,CAAc,iBAAd,EAAiC,KAAjC,CAAZ;AACAH,MAAAA,SAAS,GAAGA,SAAS,CAACG,GAAV,CAAc,SAAd,EAAyB,EAAzB,CAAZ;AACA,aAAOH,SAAP;;AACJ;AACI,aAAOF,KAAP;AAdR;AAgBH,CAnBD;;AAqBA,eAAeD,UAAf","sourcesContent":["import { Map } from \"immutable\";\nimport Globals from \"../../utils/globals\";\nimport setupSession from \"../../utils/setupSession\";\n\nimport _ from \"lodash\";\nimport { SET_AUTHENTICATED, LOGOUT } from \"../constants\";\n\nsetupSession();\nexport const initialState = Map({\n    isAuthenticated: Globals.isAuthenticated || false,\n    profile: Globals.currentUser || {},\n    appConfig: Globals.currentUser || {},\n});\n\nconst appReducer = (state = initialState, action) => {\n    let nextState = state;\n    const { payload } = action;\n    switch (action.type) {\n        case SET_AUTHENTICATED:\n            nextState = nextState.set(\n              \"isAuthenticated\",\n              _.get(payload, \"isAuthenticated\")\n            );\n            nextState = nextState.set(\"profile\", _.get(payload, \"profile\"));\n            return nextState;\n        case LOGOUT:\n            Globals.clear();\n            nextState = nextState.set(\"isAuthenticated\", false);\n            nextState = nextState.set(\"profile\", {});\n            return nextState;\n        default:\n            return state;\n    }\n}\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}